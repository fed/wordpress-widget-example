const fs = require('fs');
const path = require('path');

// Synchronously read the content of our package.json file
const metadata = fs.readFileSync('./package.json', 'utf8');

// Parse the data we need from our package.json file
const {name, description, version, author} = JSON.parse(metadata);

// Prepare data we are gonna write to disk (build/config.json file)
const templateData = {
  name,
  description,
  version,
  author
};

// We need to get the path to the js/css bundle files generated by create-react-app
walk('./build/static', file => {
  const extension = getExtension(file);
  const wantedExtensions = ['js', 'css'];

  // Remove the 'build/' chunk from the path name.
  // Because of how Wordpress widgets work, we don't need that
  if (wantedExtensions.indexOf(extension) > -1) {
    const assetPath = file
      .split('/')
      .slice(1)
      .join('/');

    templateData[extension] = assetPath;
  }
});

// Write to disk the templateData object so that Mustache can hydrate our template
fs.writeFileSync('./build/config.json', JSON.stringify(templateData));

// Recursive walk helper function
function walk(directory, callback) {
  fs
    .readdirSync(directory)
    .forEach((name) => {
      const filePath = path.join(directory, name);
      const stat = fs.statSync(filePath);

      if (stat.isFile()) {
        callback(filePath, stat);
      } else if (stat.isDirectory()) {
        walk(filePath, callback);
      }
    });
}

// Returns the extension of a file
function getExtension(filename) {
  return filename.split('.').pop();
}
